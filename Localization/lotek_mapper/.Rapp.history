Simulating Simple Movement Model#
###############################################################################				#
##	Bryant Dossman July 5, 2012#
##	First attempt. Creating a simple fixed velocity and turning angle model...i.e straight line movement#
##	NOTE: To convert from slope(m) to angle (theta)----> theta = arctan(m)#
################################################################################
##	A simple linear movement model with constant velocity and direction in #
##	cartesian coordinate system using fixed angle and fixed velocity.#
##	movement model --> S(t) = r(r,theta)#
###############################################################################
## intial conditions#
#
rinit <- c(0,0)	# inital position#
h <- 1				# timestep#
n <- 1000			# number of locations#
## fixed parameters#
#
r <- 10			# magnitude of movement (velocity)#
theta <- pi/4	# equal to 45 degree angle#
#
## simulating movement path#
#
S <- matrix(0,nrow=n,ncol=2)#
S[1,] <- rinit#
#
for (i in 1:(n-1)){#
	S[i+1,] <- S[i,] + c(r*cos(theta), r*sin(theta))#
}
S
plot(S[,1]~S[,2])
intial conditions#
#
rinit <- c(0,0)	# inital position#
h <- 1				# timestep#
n <- 100			# number of locations#
## fixed parameters#
#
r <- 10			# magnitude of movement (velocity)#
theta <- pi/4	# equal to 45 degree angle#
#
## simulating movement path#
#
S <- matrix(0,nrow=n,ncol=2)#
S[1,] <- rinit#
#
for (i in 1:(n-1)){#
	S[i+1,] <- S[i,] + c(r*cos(theta), r*sin(theta))#
}
plot(S[,1]~S[,2])
supersimple <- matrix(c(50,50,5), ncol = 3, nrow = h, byrow=TRUE)
supersimple
n <- 100			# number of locations
supersimple <- matrix(c(50,50,5), ncol = 3, nrow = h, byrow=TRUE)
supersimple
supersimple <- matrix(c(50,50,5), ncol = 3, nrow = n, byrow=TRUE)
n <- 100			# number of locations
supersimple <- matrix(c(50,50,5), ncol = 3, nrow = n, byrow=TRUE)
supersimple
